// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SharpLoad.Infra.Data.Contexts;

namespace SharpLoad.Infra.Data.Migrations
{
    [DbContext(typeof(MainContext))]
    [Migration("20200822143558_AddingHttpMethod")]
    partial class AddingHttpMethod
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-preview.7.20365.15");

            modelBuilder.Entity("SharpLoad.Core.Models.LoadTestScript", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BaseServerAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxSimultaneousClients")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<int>("SpawnRate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("LoadTestScript");
                });

            modelBuilder.Entity("SharpLoad.Core.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Body")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<int?>("LoadTestScriptId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LoadTestScriptId");

                    b.ToTable("Request");
                });

            modelBuilder.Entity("SharpLoad.Core.Models.Request", b =>
                {
                    b.HasOne("SharpLoad.Core.Models.LoadTestScript", null)
                        .WithMany("Requests")
                        .HasForeignKey("LoadTestScriptId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsMany("SharpLoad.Core.Models.RequestHeader", "Headers", b1 =>
                        {
                            b1.Property<int>("RequestId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Key")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("RequestId", "Id");

                            b1.ToTable("RequestHeader");

                            b1.WithOwner()
                                .HasForeignKey("RequestId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
